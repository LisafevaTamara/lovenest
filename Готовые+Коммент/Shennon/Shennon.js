
let alf = ['а','б','в','г','д','е','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ъ','ы','ь','э','ю','я'];
// алфавит
function give_num(h1){                          // функция для нахождения номера буквы в алфавите   
    let alf = ['а','б','в','г','д','е','ж','з', // задаем алфавит
               'и','й','к','л','м','н','о','п',
               'р','с','т','у','ф','х','ц','ч',
               'ш','щ','ъ','ы','ь','э','ю','я'];

    for (let i = 0; i<alf.length; i++){         // цикл повторяющийся такое количество раз, равное длинне алфавита
        if (h1 == alf[i]){                      // находится номер буквы в алфавите (счет с нуля)
            h1 = i+1;                           // присваемаем номер буквы в алфавите (счет с единицы)
            return h1;                          // возвращаем полученное строкой выше
        }
    
    }
    

}

function gcd(a, b) {        // функция для нахождения НОД       
    if (a == 0)             // проверка, если a = 0
        return b;           // возвращаем b
    return gcd(b % a, a);   // проверка, если a не равно 0, вызываем функцию снова
}


function shennon(){         // главная функция
    
    // получаем некоторые значения из интерфейса (от 31 до 34)
    let T = Number(document.getElementById('Tid').value);
    let a = Number(document.getElementById('aid').value);
    let c = Number(document.getElementById('cid').value);
    let m = Number(document.getElementById('mid').value);


    let text = document.getElementById('textid').value;                                 // получаем текст из интерфейса
    let code = document.querySelector("input[type='radio'][name=rad]:checked").value;   // получаем выбранное значение encode/decode

    var mass_count = [];

    text = text.toLowerCase()               // переводит весь полученный текст в нижний регистр

    while(text.indexOf('.') != -1){         // цикл пока в тексте ещё есть точки
        text = text.replace('.','тчкф');    // замена найденной точки на 'тчкф'
    }

    while(text.indexOf(',') != -1){         // цикл пока в тексте ещё есть запятые
        text = text.replace(',','зптф');    // замена найденной запятые на 'зптф'
    }

    while(text.indexOf('-') != -1){         // цикл пока в тексте ещё есть тире
        text = text.replace('-','трф');     // замена найденной тире на 'трф'
    }

    while(text.indexOf('–') != -1){         // цикл пока в тексте ещё есть тире ( вторая вариация этого символа)
        text = text.replace('–','трф');     // замена найденной тире на 'трф'
    }

    if(code == 'encode'){                   // если программа работает на зашифрование
        while(text.indexOf(' ') != -1){     // цикл пока в тексте ещё есть пробел
            text = text.replace(' ','прбф'); // замена найденной пробелы на 'прбф'
        }
    }
    let vvod = document.getElementById('div');  // Получаем координаты пространства, в которое будет вставлен зашифрованный текст
    if (T>m || a > m || c > m ){                // проверка m
        console.log('Ошибка! один из параметров больше m')
        return false;
    }

    if(a%2== 0){                                // проверка a
        console.log('Ошибка! [a] должно быть нечетным')
        return false;
    }
    if (gcd(a,m)!= 1){                          // проверка а должно быть взаимно простым с m (if срабатывает, если это условие не выполняется)
        console.log('Ошибка! [a] не является взаимно простым с числом [m]')
        return false;
    }

    if (m%4 == 0 && (a-1)%4!=0){                // проверка не кратно 4 (В то время, как [m] кратно)'
        console.log('Ошибка! [b] не кратно 4 (В то время, как [m] кратно)')
        return false;
    }

    //let text = 'одиндурак';
    //let a = 9;
    //let c = 13;

    let result = '';                            // создаем переменную для записи результата
    if(code == 'encode'){                       // проверка на действие (в даннос случае это зашифровка, выбран 'encode')
        for(let i = 0; i<text.length; i++){     // цикл повторяющийся такое количество раз, равное длинне текста
            if (text[i]==' '){                  // проверка на пробелы в тесте
                continue                      
            }
            let summ = (a*T + c)%m;             // получаем новую T, записываем в отдельную переменную
            T = summ;                           // обновляем T
            summ += give_num(text[i]);          // шифрование по формуле (получаем зашифрованный номер буквы в алфавите)
            if (summ>m){                        // если ашифрованный номер буквы в алфавите больше длинны алфавита
                summ -= m;                      // вчитаем 32
            }
            result += summ + ' ';               // записываем в результат
        }
    }
    if(code == 'decode'){                       // проверка на действие (в даннос случае это расшифровка, выбран 'decode')
        let mass = text.split(' ').map(Number); // превращаем строку в массив, делаем его целочисленным
        let alf = ['а','б','в','г','д','е','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ъ','ы','ь','э','ю','я'];
        for(let i = 0; i<mass.length; i++){     // цикл повторяющийся такое количество раз, равное длинне массива
            let summ = (a*T + c)%m;             // получаем новую T, записываем в отдельную переменную
            T = summ;                           // обновляем T
            summ = mass[i] + 32 - summ;         // расшифрование по формуле (получаем зашифрованный номер буквы в алфавите)
            if (summ>m){                        // если ашифрованный номер буквы в алфавите больше длинны алфавита
                summ -= m;                      // вчитаем 32
            }
            result += alf[summ-1];              // записываем в результат
        }
        while(result.indexOf('тчкф') != -1){            // цикл пока в тексте ещё есть 'тчкф'
            result = result.replace('тчкф','. ');       // замена найденной 'тчкф' на точку "."
        }
        while(result.indexOf('прбф') != -1){            // цикл пока в тексте ещё есть 'прбф'
            result = result.replace('прбф',' ');        // замена найденной 'прбф' на пробел " "
        }
        while(result.indexOf('зптф') != -1){            // цикл пока в тексте ещё есть 'зптф'
            result = result.replace('зптф',', ');       // замена найденной 'зптф' на запятую ","
        }
        while(result.indexOf('трф') != -1){             // цикл пока в тексте ещё есть 'трф'
            result = result.replace('трф','-');         // замена найденной 'трф'на '-'
        }
    }
    
    console.log(result)
    vvod.innerHTML=result;                      // выводим результат в интерфейс
    return result;
}

//shennon(12,9,13,32, 'один дурак')
